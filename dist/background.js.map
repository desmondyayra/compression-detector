{"version":3,"file":"background.js","mappings":";;;;;;;;;;AAAA;;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA","sources":["webpack://youtube-compression-detector/./src/background.js"],"sourcesContent":["console.log('YouTube Compression Detector: Background script loaded');\r\n\r\n// Map from tabId to videoInfo\r\nconst videoInfoByTab = new Map();\r\n\r\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n  console.log('Message received in background:', message);\r\n\r\n  if (message.action === 'videoUpdate') {\r\n    console.log(\"Background received video update\");\r\n    const tabId = sender.tab?.id;\r\n    \r\n    if (tabId !== undefined) {\r\n      videoInfoByTab.set(tabId, message.video);\r\n      console.log(`Updated video info for tab ${tabId}:`, message.video);\r\n    }\r\n    \r\n    sendResponse({ status: 'received' });\r\n    return true;  // Keep the message channel open for async response\r\n  }\r\n\r\n  if (message.action === 'getLatestVideoInfo') {\r\n    const tabId = message.tabId;\r\n    console.log(`Background received request for tab ${tabId}`);\r\n    \r\n    const info = videoInfoByTab.get(tabId);\r\n    console.log(\"Found info:\", info);\r\n\r\n    if (!info) {\r\n      console.log(\"No info found for this tab\");\r\n      sendResponse({ status: 'not_found', reason: 'No update for this tab yet' });\r\n    } else {\r\n      console.log(\"Sending back info:\", info);\r\n      sendResponse({ status: 'success', video: info });\r\n    }\r\n    \r\n    return true;  // Keep the message channel open for async response\r\n  }\r\n\r\n  return true;  // Always return true to indicate you might respond asynchronously\r\n});\r\n\r\n// Add this debug function to help identify if video info exists\r\nchrome.tabs.onActivated.addListener((activeInfo) => {\r\n  console.log(`Tab ${activeInfo.tabId} became active`);\r\n  console.log(`Video info available for tabs: ${[...videoInfoByTab.keys()].join(', ')}`);\r\n});"],"names":[],"sourceRoot":""}