{"version":3,"file":"content.js","mappings":";;;;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AAOA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA","sources":["webpack://youtube-compression-detector/./src/content.js"],"sourcesContent":["console.log('YouTube Compression Detector: Content script loaded');\r\n\r\nfunction isYouTubeWatchPage() {\r\n  return window.location.hostname.includes('youtube.com') &&\r\n         window.location.pathname === '/watch';\r\n}\r\n\r\nfunction getVideoTitle() {\r\n  const possibleSelectors = [\r\n    'h1.title.style-scope.ytd-video-primary-info-renderer',\r\n    'h1.ytd-watch-metadata',\r\n    'h1.title',\r\n    'ytd-watch-metadata h1'\r\n  ];\r\n\r\n  for (const selector of possibleSelectors) {\r\n    const titleElement = document.querySelector(selector);\r\n    if (titleElement && titleElement.textContent.trim()) {\r\n      return titleElement.textContent.trim();\r\n    }\r\n  }\r\n\r\n  return 'Unknown YouTube Video';\r\n}\r\n\r\nfunction collectVideoInfo() {\r\n  if (!isYouTubeWatchPage()) return null;\r\n\r\n  return {\r\n    isYouTubeVideo: true,\r\n    title: getVideoTitle(),\r\n    url: window.location.href,\r\n    videoId: new URLSearchParams(window.location.search).get('v'),\r\n    timestamp: Date.now()\r\n  };\r\n}\r\n\r\n// Send video info every 1 minute\r\nsetInterval(() => {\r\n\r\n  console.log(\"starting interval !!!\")\r\n  const videoInfo = collectVideoInfo();\r\n  if (videoInfo) {\r\n    chrome.runtime.sendMessage({ action: 'videoUpdate', video: videoInfo });\r\n  }\r\n}, 60000);\r\n\r\n// Also send immediately on load\r\nconst initialInfo = collectVideoInfo();\r\nif (initialInfo) {\r\n  chrome.runtime.sendMessage({ action: 'videoUpdate', video: initialInfo });\r\n}\r\n"],"names":[],"sourceRoot":""}