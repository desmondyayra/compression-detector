{"version":3,"file":"content.js","mappings":";;;;AACA;AAEA;AACA;AAEA;AAGA;AAEA;AAOA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://youtube-compression-detector/./src/content.js"],"sourcesContent":["\r\nconsole.log('YouTube Compression Detector: Content script loaded');\r\n\r\nfunction isYouTubeWatchPage() {\r\n  return window.location.hostname.includes('youtube.com') && \r\n         window.location.pathname === '/watch';\r\n}\r\n\r\n\r\nfunction getVideoTitle() {\r\n  \r\n  const possibleSelectors = [\r\n    'h1.title.style-scope.ytd-video-primary-info-renderer',\r\n    'h1.ytd-watch-metadata',\r\n    'h1.title',\r\n    'ytd-watch-metadata h1'\r\n  ];\r\n\r\n  for (const selector of possibleSelectors) {\r\n    const titleElement = document.querySelector(selector);\r\n    if (titleElement && titleElement.textContent.trim()) {\r\n      return titleElement.textContent.trim();\r\n    }\r\n  }\r\n  \r\n  return 'Unknown YouTube Video';\r\n}\r\n\r\n\r\nfunction sendVideoInfo() {\r\n  if (!isYouTubeWatchPage()) {\r\n    return {\r\n      isYouTubeVideo: false\r\n    };\r\n  }\r\n\r\n  return {\r\n    isYouTubeVideo: true,\r\n    title: getVideoTitle(),\r\n    url: window.location.href,\r\n    videoId: new URLSearchParams(window.location.search).get('v')\r\n  };\r\n}\r\n\r\n\r\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\r\n  if (request.action === 'getVideoInfo') {\r\n    sendResponse(sendVideoInfo());\r\n  }\r\n  return true;\r\n});"],"names":[],"sourceRoot":""}